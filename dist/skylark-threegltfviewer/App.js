/**
 * skylark-threegltfviewer - A version of threegltfviewer that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-threegltfviewer/
 * @license MIT
 */
define(["skylark-threejs-ex/WebGL","./threegltviewer","./Viewer","./SimpleDropzone"],function(e,t,r,i){"use strict";return t.App=class{constructor(e,t){const r={};this.options={kiosk:Boolean(r.kiosk),model:r.model||"",preset:r.preset||"",cameraPosition:r.cameraPosition?r.cameraPosition.split(",").map(Number):null},this.el=e,this.viewer=null,this.viewerEl=null,this.spinnerEl=e.querySelector(".spinner"),this.dropEl=e.querySelector(".dropzone"),this.inputEl=e.querySelector("#file-input"),this.createDropzone(),this.hideSpinner();const i=this.options;i.kiosk&&(document.querySelector("header").style.display="none"),i.model&&this.view(i.model,"",new Map)}createDropzone(){const e=new i(this.el.querySelector(".wrap"),{selectors:{dropzone:".dropzone",picker:".upload-btn"}});e.on("drop",(e,{files:t})=>this.load(t)),e.on("dropstart",e=>this.showSpinner()),e.on("droperror",e=>this.hideSpinner())}createViewer(){return this.viewerEl=document.createElement("div"),this.viewerEl.classList.add("viewer"),this.dropEl.innerHTML="",this.dropEl.appendChild(this.viewerEl),this.viewer=new r(this.viewerEl,this.options),this.viewer}load(e){let t,r;Array.from(e).forEach(([e,i])=>{e.match(/\.(gltf|glb|3ds|obj)$/)&&(t=i,r="")}),t||this.onError("No asset(.gltf,.glb,.3ds,.obj) found."),this.view(t,r,e)}view(e,t,r){this.viewer&&this.viewer.clear();const i=this.viewer||this.createViewer(),o="string"==typeof e?e:URL.createObjectURL(e),s=()=>{this.hideSpinner(),"object"==typeof e&&URL.revokeObjectURL(o)};i.load(o,t,r).catch(e=>this.onError(e)).then(e=>{s()})}onError(e){let t=(e||{}).message||e.toString();t.match(/ProgressEvent/)?t="Unable to retrieve this file. Check JS console and browser network tab.":t.match(/Unexpected token/)?t=`Unable to parse file content. Verify that this file is valid. Error: "${t}"`:e&&e.target&&e.target instanceof Image&&(t="Missing texture: "+e.target.src.split("/").pop()),window.alert(t),console.error(e)}showSpinner(){this.spinnerEl.style.display=""}hideSpinner(){this.spinnerEl.style.display="none"}}});
//# sourceMappingURL=sourcemaps/App.js.map
